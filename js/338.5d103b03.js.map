{"version":3,"file":"js/338.5d103b03.js","mappings":"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","sources":["webpack://cloud-storage/./src/views/AuthRegister.vue?c85c","webpack://cloud-storage/./src/views/AuthRegister.vue?1c86","webpack://cloud-storage/./src/views/AuthRegister.vue","webpack://cloud-storage/../../../src/components/VBanner/VBannerText.ts","webpack://cloud-storage/../../../src/components/VForm/VForm.tsx","webpack://cloud-storage/../../../src/components/VGrid/VCol.ts","webpack://cloud-storage/../../../src/components/VGrid/VContainer.tsx"],"sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, withModifiers as _withModifiers, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\")!\n  const _component_v_btn = _resolveComponent(\"v-btn\")!\n  const _component_v_form = _resolveComponent(\"v-form\")!\n  const _component_router_link = _resolveComponent(\"router-link\")!\n  const _component_v_banner_text = _resolveComponent(\"v-banner-text\")!\n  const _component_v_col = _resolveComponent(\"v-col\")!\n  const _component_v_container = _resolveComponent(\"v-container\")!\n\n  return (_openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_v_col, {\n        class: \"ma-auto text-center\",\n        cols: \"12\",\n        md: \"4\"\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_v_form, {\n            onSubmit: _withModifiers(_ctx.validate, [\"prevent\"]),\n            ref: \"form\",\n            modelValue: _ctx.valid,\n            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.valid) = $event)),\n            \"lazy-validation\": \"\"\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_v_text_field, {\n                modelValue: _ctx.firstname,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.firstname) = $event)),\n                counter: 10,\n                rules: _ctx.nameRules,\n                label: \"First name\",\n                clearable: \"\",\n                required: \"\"\n              }, null, 8, [\"modelValue\", \"rules\"]),\n              _createVNode(_component_v_text_field, {\n                modelValue: _ctx.lastname,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.lastname) = $event)),\n                counter: 10,\n                rules: _ctx.nameRules,\n                label: \"Last name\",\n                clearable: \"\",\n                required: \"\"\n              }, null, 8, [\"modelValue\", \"rules\"]),\n              _createVNode(_component_v_text_field, {\n                modelValue: _ctx.email,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.email) = $event)),\n                rules: _ctx.emailRules,\n                label: \"E-mail\",\n                clearable: \"\",\n                required: \"\"\n              }, null, 8, [\"modelValue\", \"rules\"]),\n              _createVNode(_component_v_text_field, {\n                modelValue: _ctx.password,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.password) = $event)),\n                \"append-icon\": _ctx.show1 ? 'mdi-eye' : 'mdi-eye-off',\n                rules: [_ctx.passwordRules.required, _ctx.passwordRules.min],\n                type: _ctx.show1 ? 'text' : 'password',\n                name: \"input-10-1\",\n                label: \"Password\",\n                hint: \"At least 8 characters\",\n                counter: \"\",\n                \"onClick:append\": _cache[4] || (_cache[4] = ($event: any) => (_ctx.show1 = !_ctx.show1))\n              }, null, 8, [\"modelValue\", \"append-icon\", \"rules\", \"type\"]),\n              _createVNode(_component_v_btn, {\n                disabled: !_ctx.valid,\n                color: \"success\",\n                class: \"mr-4\",\n                onClick: _ctx.validate\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\" Зарегистрироваться \")\n                ]),\n                _: 1\n              }, 8, [\"disabled\", \"onClick\"])\n            ]),\n            _: 1\n          }, 8, [\"onSubmit\", \"modelValue\"]),\n          _createVNode(_component_v_banner_text, { class: \"mt-5\" }, {\n            default: _withCtx(() => [\n              _createTextVNode(\"Уже есть аккаунт? \"),\n              _createVNode(_component_router_link, { to: \"/login\" }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"Войти\")\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\r\nimport { defineComponent } from 'vue';\r\n\r\nexport type Register = {\r\n  firstname: string,\r\n  lastname: string,\r\n  email: string,\r\n  password: string\r\n}\r\nexport default defineComponent({\r\n  name: 'AuthRegister',\r\n  data: () => ({\r\n    // валидна или нет\r\n    valid: true,\r\n    // Имя\r\n    firstname: '',\r\n    // Фамилия\r\n    lastname: '',\r\n    // скрытие пароля\r\n    show1: false,\r\n    // пароль\r\n    password: '',\r\n    // Валидация пароля\r\n    passwordRules: {\r\n      required: (value: string) => !!value || 'Пароль не валидно',\r\n      min: (v: string) => v.length >= 8 || 'Минимум 8 символов',\r\n    },\r\n    // Валидация имени\r\n    nameRules: [\r\n      (v: string) => !!v || 'Название не валидно',\r\n      (v: string) => (v && v.length <= 10) || 'Имя должно содержать не более 10 символов',\r\n    ],\r\n    // почта\r\n    email: '',\r\n    // валидация почты\r\n    emailRules: [\r\n      (v: string) => !!v || 'Почта не валидна',\r\n      (v: string) => /.+@.+\\..+/.test(v) || 'Почта не валидна',\r\n    ]\r\n  }),\r\n\r\n  methods: {\r\n    // регистрация\r\n    async validate(): Promise<void> {\r\n      const {valid} = await (this.$refs['form'] as any).validate()\r\n      if (!valid) alert('Форма не валидна')\r\n      // Данные о человеке\r\n      const payload: Register = {\r\n        firstname:this.firstname,\r\n        lastname:this.lastname,\r\n        email: this.email,\r\n        password: this.password\r\n      }\r\n      try {\r\n        await this.$store.dispatch('auth/registration', payload)\r\n        await (this.$refs['form'] as any).reset()\r\n        this.$router.push(\"/\")\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n  }\r\n})\r\n","import { render } from \"./AuthRegister.vue?vue&type=template&id=71ac72e9&ts=true\"\nimport script from \"./AuthRegister.vue?vue&type=script&lang=ts\"\nexport * from \"./AuthRegister.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"D:\\\\fullstack\\\\projects\\\\Frontend\\\\VUEJS\\\\cloud-storage\\\\cloud-storage-frontend-typescript\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createSimpleFunctional } from '@/util'\n\nexport const VBannerText = createSimpleFunctional('v-banner-text')\n\nexport type VBannerText = InstanceType<typeof VBannerText>\n","// Composables\nimport { createForm, makeFormProps } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\n\n// Utilities\nimport { ref } from 'vue'\nimport { defineComponent, useRender } from '@/util'\n\n// Types\nimport type { SubmitEventPromise } from '@/composables/form'\n\nexport const VForm = defineComponent({\n  name: 'VForm',\n\n  props: {\n    ...makeFormProps(),\n  },\n\n  emits: {\n    'update:modelValue': (val: boolean | null) => true,\n    submit: (e: SubmitEventPromise) => true,\n  },\n\n  setup (props, { slots, emit }) {\n    const form = createForm(props)\n    const formRef = ref<HTMLFormElement>()\n\n    function onReset (e: Event) {\n      e.preventDefault()\n      form.reset()\n    }\n\n    function onSubmit (_e: Event) {\n      const e = _e as SubmitEventPromise\n\n      const ready = form.validate()\n      e.then = ready.then.bind(ready)\n      e.catch = ready.catch.bind(ready)\n      e.finally = ready.finally.bind(ready)\n\n      emit('submit', e)\n\n      if (!e.defaultPrevented) {\n        ready.then(({ valid }) => {\n          if (valid) {\n            formRef.value?.submit()\n          }\n        })\n      }\n\n      e.preventDefault()\n    }\n\n    useRender(() => ((\n      <form\n        ref={ formRef }\n        class=\"v-form\"\n        novalidate\n        onReset={ onReset }\n        onSubmit={ onSubmit }\n      >\n        { slots.default?.(form) }\n      </form>\n    )))\n\n    return forwardRefs(form, formRef)\n  },\n})\n\nexport type VForm = InstanceType<typeof VForm>\n","// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { capitalize, computed, h } from 'vue'\nimport { defineComponent } from '@/util'\n\n// Types\nimport type { Prop, PropType } from 'vue'\n\nconst breakpoints = ['sm', 'md', 'lg', 'xl', 'xxl'] as const // no xs\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Record<string, Prop<boolean | string | number, false>>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + capitalize(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<string, Prop<string | number, null>>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + capitalize(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<string, Prop<string | number, null>>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className: string = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  if (type === 'col') {\n    className = 'v-' + className\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .v-col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst ALIGN_SELF_VALUES = ['auto', 'start', 'end', 'center', 'baseline', 'stretch'] as const\n\nexport const VCol = defineComponent({\n  name: 'VCol',\n\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false,\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null,\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null,\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String as PropType<typeof ALIGN_SELF_VALUES[number]>,\n      default: null,\n      validator: (str: any) => ALIGN_SELF_VALUES.includes(str),\n    },\n\n    ...makeTagProps(),\n  },\n\n  setup (props, { slots }) {\n    const classes = computed(() => {\n      const classList: any[] = []\n\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('v-col-'))\n\n      classList.push({\n        // Default to .v-col if no other col-{bp}-* classes generated nor `cols` specified.\n        'v-col': !hasColClasses || !props.cols,\n        [`v-col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      return classList\n    })\n\n    return () => h(props.tag, {\n      class: classes.value,\n    }, slots.default?.())\n  },\n})\n\nexport type VCol = InstanceType<typeof VCol>\n","// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { defineComponent, useRender } from '@/util'\n\nexport const VContainer = defineComponent({\n  name: 'VContainer',\n\n  props: {\n    fluid: {\n      type: Boolean,\n      default: false,\n    },\n\n    ...makeTagProps(),\n  },\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-container',\n          { 'v-container--fluid': props.fluid },\n        ]}\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VContainer = InstanceType<typeof VContainer>\n"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_router_link","_resolveComponent","_openBlock","_createBlock","_component_v_container","default","_withCtx","_createVNode","_component_v_col","class","cols","md","_component_v_form","onSubmit","_withModifiers","validate","ref","modelValue","valid","$event","_component_v_text_field","firstname","counter","rules","nameRules","label","clearable","required","lastname","email","emailRules","password","show1","passwordRules","min","type","name","hint","_component_v_btn","disabled","color","onClick","_createTextVNode","_","_component_v_banner_text","to","defineComponent","data","value","v","length","test","methods","async","this","$refs","alert","payload","$store","dispatch","reset","$router","push","err","console","log","__exports__","VBannerText","createSimpleFunctional","VForm","props","makeFormProps","emits","val","submit","e","setup","slots","emit","form","createForm","formRef","onReset","preventDefault","_e","ready","then","bind","catch","finally","defaultPrevented","_ref2","_formRef$value","useRender","_slots$default","forwardRefs","breakpoints","breakpointProps","reduce","Boolean","String","Number","offsetProps","capitalize","orderProps","propMap","col","Object","keys","offset","order","breakpointClass","prop","className","breakpoint","replace","toLowerCase","ALIGN_SELF_VALUES","VCol","alignSelf","validator","str","includes","makeTagProps","classes","computed","classList","forEach","hasColClasses","some","startsWith","h","tag","VContainer","fluid"],"sourceRoot":""}